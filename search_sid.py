# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'search_sid.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import urllib.request
from PyQt5 import QtCore, QtWidgets
from PyQt5.QtWidgets import QDialog, QLabel
from PyQt5.QtGui import QImage, QPixmap
from PyQt5.QtCore import Qt
from db_manager import DBManager

# Search by Student ID
class UISearchSID(QDialog):
    def __init__(self):
        # Connects to DB
        self.db = DBManager('..')
        self.db.open_connection()

        super().__init__()
        self.setup_ui(self)
        self.retranslate_ui(self)

        self.sid_entry.returnPressed.connect(self.update_display)       # On enter, displays results if available

    def setup_ui(self, search_sid):
        search_sid.setObjectName("search_sid")
        search_sid.resize(611, 448)
        search_sid.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.title = QtWidgets.QLabel(search_sid)
        self.title.setGeometry(QtCore.QRect(20, 10, 91, 16))
        self.title.setStyleSheet("font: 75 10pt \"MS Shell Dlg 2\";")
        self.title.setObjectName("title")
        self.hline = QtWidgets.QFrame(search_sid)
        self.hline.setGeometry(QtCore.QRect(20, 30, 581, 16))
        self.hline.setFrameShape(QtWidgets.QFrame.HLine)
        self.hline.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.hline.setObjectName("hline")

        self.sid_entry = QtWidgets.QLineEdit(search_sid)
        self.sid_entry.setGeometry(QtCore.QRect(140, 60, 411, 21))
        self.sid_entry.setObjectName("sid_entry")

        self.sid_txt = QtWidgets.QLabel(search_sid)
        self.sid_txt.setGeometry(QtCore.QRect(30, 60, 71, 21))
        self.sid_txt.setObjectName("sid_txt")
        self.hline_2 = QtWidgets.QFrame(search_sid)
        self.hline_2.setGeometry(QtCore.QRect(20, 370, 581, 16))
        self.hline_2.setStyleSheet("color: rgb(85, 170, 255);")
        self.hline_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.hline_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.hline_2.setObjectName("hline_2")

        self.exit_btn = QtWidgets.QPushButton(search_sid)
        self.exit_btn.clicked.connect(self.close)                   # Closes window
        self.exit_btn.setAutoDefault(False)
        self.exit_btn.setGeometry(QtCore.QRect(510, 400, 81, 31))
        self.exit_btn.setStyleSheet("font: 75 12pt \"MS Shell Dlg 2\";\n"
                                    "background-color: rgb(85, 170, 255);\n"
                                    "border-radius:8px;\n"
                                    "color:white;")
        self.exit_btn.setObjectName("exit_btn")

        self.first_lbl = QtWidgets.QLabel(search_sid)
        self.first_lbl.setGeometry(QtCore.QRect(160, 130, 71, 16))
        self.first_lbl.setObjectName("first_lbl")
        self.first_txt = QtWidgets.QLabel(search_sid)
        self.first_txt.setGeometry(QtCore.QRect(320, 130, 191, 16))
        self.first_txt.setObjectName("first_txt")
        self.last_lbl = QtWidgets.QLabel(search_sid)
        self.last_lbl.setGeometry(QtCore.QRect(160, 180, 61, 16))
        self.last_lbl.setObjectName("last_lbl")
        self.last_txt = QtWidgets.QLabel(search_sid)
        self.last_txt.setGeometry(QtCore.QRect(320, 180, 231, 16))
        self.last_txt.setObjectName("last_txt")
        self.email_lbl = QtWidgets.QLabel(search_sid)
        self.email_lbl.setGeometry(QtCore.QRect(160, 230, 47, 13))
        self.email_lbl.setObjectName("email_lbl")
        self.email_txt = QtWidgets.QLabel(search_sid)
        self.email_txt.setGeometry(QtCore.QRect(320, 230, 261, 16))
        self.email_txt.setObjectName("email_txt")
        self.year_lbl = QtWidgets.QLabel(search_sid)
        self.year_lbl.setGeometry(QtCore.QRect(160, 280, 101, 16))
        self.year_lbl.setObjectName("year_lbl")
        self.photo_lbl = QtWidgets.QLabel(search_sid)
        self.photo_lbl.setGeometry(QtCore.QRect(160, 330, 47, 13))
        self.photo_lbl.setObjectName("photo_lbl")
        self.year_txt = QtWidgets.QLabel(search_sid)
        self.year_txt.setGeometry(QtCore.QRect(320, 280, 271, 13))
        self.year_txt.setObjectName("year_txt")
        self.photo_txt = QtWidgets.QLabel(search_sid)
        self.photo_txt.setGeometry(QtCore.QRect(320, 330, 261, 16))
        self.photo_txt.setObjectName("photo_txt")


        self.retranslate_ui(search_sid)
        QtCore.QMetaObject.connectSlotsByName(search_sid)

    def retranslate_ui(self, search_sid):
        _translate = QtCore.QCoreApplication.translate
        search_sid.setWindowTitle(_translate("search_sid", "Search by Student ID"))
        self.title.setText(_translate("search_sid",
                                      "<html><head/><body><p><span style=\" font-weight:600;\">Search by ID</span></p></body></html>"))
        self.sid_txt.setText(_translate("search_sid",
                                        "<html><head/><body><p><span style=\" font-size:10pt;\">Student ID</span></p></body></html>"))
        self.exit_btn.setText(_translate("search_sid", "Exit"))
        self.first_lbl.setText(_translate("search_sid",
                                          "<html><head/><body><p><span style=\" font-size:10pt;\">First Name</span></p></body></html>"))
        self.first_txt.setText(_translate("search_sid",
                                          "<html><head/><body><p><span style=\" font-size:10pt;\"></span></p></body></html>"))
        self.last_lbl.setText(_translate("search_sid",
                                         "<html><head/><body><p><span style=\" font-size:10pt;\">Last Name</span></p></body></html>"))
        self.last_txt.setText(_translate("search_sid",
                                         "<html><head/><body><p><span style=\" font-size:10pt;\"></span></p></body></html>"))
        self.email_lbl.setText(_translate("search_sid",
                                          "<html><head/><body><p><span style=\" font-size:10pt;\">Email</span></p></body></html>"))
        self.email_txt.setText(_translate("search_sid",
                                          "<html><head/><body><p><span style=\" font-size:10pt;\"></span></p></body></html>"))
        self.year_lbl.setText(_translate("search_sid",
                                         "<html><head/><body><p><span style=\" font-size:10pt;\">Admittance Year</span></p></body></html>"))
        self.photo_lbl.setText(_translate("search_sid",
                                          "<html><head/><body><p><span style=\" font-size:10pt;\">Photo</span></p></body></html>"))
        self.year_txt.setText(_translate("search_sid",
                                         "<html><head/><body><p><span style=\" font-size:10pt;\"></span></p></body></html>"))
        self.photo_txt.setText(_translate("search_sid",
                                          "<html><head/><body><p><span style=\" font-size:10pt;\"></span></p></body></html>"))

    def update_display(self):
        text = self.sid_entry.text()
        user_info = self.db.search_by_id(text)
        if user_info:
            self.first_txt.setText(user_info[1])
            self.last_txt.setText(user_info[2])
            self.email_txt.setText(user_info[3])
            self.year_txt.setText(str(user_info[4]))
            self.photo_txt.setText(user_info[5])
            # self.load_image(user_info[5])
        else:
            self.first_txt.setText("Invalid User, Enter 9 digit student ID")
            self.last_txt.setText("")
            self.email_txt.setText("")
            self.year_txt.setText("")
            self.photo_txt.setText("")

    # Not working
    def load_image(self, url):
        base_url = "http://cse2050.drfitz.fit/data/avatars/"
        full_url = base_url + url

        data = urllib.request.urlopen(full_url).read()
        my_image = QImage()
        my_image.loadFromData(data)
        _pic_label = QLabel(self)
        w = 100
        h = 100

        pixmap = QPixmap.fromImage(my_image)
        scaled_img = pixmap.scaled(w, h, Qt.KeepAspectRatio)
        _pic_label.setPixmap(scaled_img)
